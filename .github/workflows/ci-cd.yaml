name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Gatilho para o branch principal
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout do repositório
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Configurar Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    # 3. Instalar dependências
    - name: Install dependencies
      run: |
        python -m venv .venv
        source .venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    # 4. Fazer o login no Docker Hub
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # 5. Build e Push da Imagem Docker
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/to-do:${{ github.sha }}

    # 6. Deploy no Azure App Service
    - name: Deploy to Azure
      uses: azure/webapps-deploy@v2
      with:
        app-name: "to-do"  # Substitua pelo nome do seu App Service
        slot-name: "production"
        publish-profile: ${{ secrets.AZURE_PROFILE }}
        images: ${{ secrets.DOCKERHUB_USERNAME }}/to-do:${{ github.sha }}

  deploy-containers:
    runs-on: ubuntu-latest
    needs: build-and-deploy  # Esse job depende do job anterior de build

    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # Azure login using service principal credentials
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          
      # Azure CLI setup
      - name: Set up Azure CLI
        uses: azure/cli@v2
        with:
          azcliversion: latest
          inlineScript: |
            az account show
            az storage -h

      # Criar o container PostgreSQL
      - name: Deploy PostgreSQL container
        run: |
          az container create \
            --name todo-postgres \
            --resource-group rs-fiap-on \
            --image todo-postgres:latest \
            --ports 5432 \
            --environment-variables POSTGRES_PASSWORD=todo_password POSTGRES_USER=todo_user POSTGRES_DB=todo_db \
            --dns-name-label todo-postgres-dns \
            --location eastus

      # Criar o container Redis
      - name: Deploy Redis container
        run: |
          az container create \
            --name todo-redis \
            --resource-group  rs-fiap-on \
            --image redis:latest \
            --ports 6379 \
            --dns-name-label todo-redis-dns \
            --location eastus
